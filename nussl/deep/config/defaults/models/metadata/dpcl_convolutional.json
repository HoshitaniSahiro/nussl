{
  "num_frequencies": {
    "type": "int",
    "help":"Specify the number of frequency steps for input representations"
  },
  "num_mels": {
    "type": "int",
    "help": "Specifies the number of mel frequency steps for projection (-1 avoids projection but still performs clamping)"
  },
  "sample_rate": {
    "type": "int",
    "help": "Audio sample rate in Hz"
  },
  "in_channels": {
    "type": "int",
    "help": "Number of input channels (e.g. multichannel audio vs mono)"
  },
  "channels": {
    "nargs": "+",
    "help": "List of number of channels (int) in each layer, separated by spaces. Better to edit this in the output json."
  },
  "residuals": {
    "nargs": "+",
    "choices": ["true", "false"],
    "help": "List of whether to put a residual connection at each layer, separated by spaces. Better to edit this in the output json."
  },
  "embedding_size": {
    "type": "int",
    "help": "Number of dimensions for embedding output"
  },
  "batch_norm": {
    "type": "bool",
    "help": "Whether to apply batch normalization to each layer"
  },
  "filter_shapes": {
    "nargs": "+",
    "help": "List of filter shapes, separated by spaces. Better to edit this in the output json."
  },
  "dilations": {
    "nargs": "+",
    "help": "List of dilations, separated by spaces. Better to edit this in the output json."
  },
  "embedding_activations": {
    "nargs": "+",
    "choices": ["tanh", "relu", "sigmoid", "softmax", "none", "unitnorm"],
    "help": "Activation functions, specified as multiple values passed to this argument. To be exact, you may specify ONE of [tanh, relu, sigmoid, softmax, none], then also (optionally) space separated unitnorm."
  },
  "projection_trainable": {
    "type": "bool",
    "help": "Project to a learned input representation (learned from initial Mel projection)"
  }
}
